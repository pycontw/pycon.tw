# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-04-08 08:42
from __future__ import unicode_literals

import core.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


def add_locations(apps, schema_editor):
    Location = apps.get_model('schedule', 'Location')
    queryset = Location.objects.using(schema_editor.connection.alias)
    queryset.create(name='Conference Hall', slug='r0')
    queryset.create(name='Conference Room 1', slug='r1')
    queryset.create(name='Conference Room 2', slug='r2')
    queryset.create(name='Recreation Hall', slug='rec hall')


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('proposals', '0024_auto_20160307_0412'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(choices=[(datetime.date(2016, 6, 3), 'Day 1'), (datetime.date(2016, 6, 4), 'Day 2'), (datetime.date(2016, 6, 5), 'Day 3')], db_index=True, verbose_name='day')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('name_zh', models.CharField(blank=True, max_length=25, verbose_name='name (Chinese)')),
                ('end_time', models.TimeField(db_index=True, verbose_name='end time')),
            ],
            options={
                'verbose_name': 'event',
                'ordering': ['day', 'start_time', 'end_time'],
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('slug', models.SlugField(primary_key=True, serialize=False, verbose_name='slug')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'location',
                'ordering': ['pk'],
                'verbose_name_plural': 'locations',
            },
        ),
        migrations.CreateModel(
            name='StartTime',
            fields=[
                ('time', models.TimeField(primary_key=True, serialize=False, verbose_name='time')),
            ],
            options={
                'verbose_name': 'start time',
                'ordering': ['time'],
                'verbose_name_plural': 'start times',
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(choices=[(datetime.date(2016, 6, 3), 'Day 1'), (datetime.date(2016, 6, 4), 'Day 2'), (datetime.date(2016, 6, 5), 'Day 3')], db_index=True, verbose_name='day')),
                ('duration', models.DurationField(choices=[(datetime.timedelta(0, 1500), '25 minutes'), (datetime.timedelta(0, 2700), '45 minutes')], db_index=True, verbose_name='duration')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Location', verbose_name='location')),
                ('proposal', core.models.BigForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proposals.TalkProposal', verbose_name='proposal')),
                ('start_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.StartTime', verbose_name='start time')),
            ],
            options={
                'verbose_name': 'talk',
                'ordering': ['day', 'start_time', 'location'],
                'verbose_name_plural': 'talks',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='location_set',
            field=models.ManyToManyField(to='schedule.Location', verbose_name='locations'),
        ),
        migrations.AddField(
            model_name='event',
            name='start_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.StartTime', verbose_name='start time'),
        ),
        migrations.RunPython(
            code=add_locations,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
